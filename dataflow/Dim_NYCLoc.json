{
	"name": "Dim_NYCLoc",
	"properties": {
		"description": "",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowFlakeNYPD",
						"type": "DatasetReference"
					},
					"name": "source"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeNYLOC",
						"type": "DatasetReference"
					},
					"name": "maxLocSK"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeNYLOC",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "aggregate"
				},
				{
					"name": "derivedColumns"
				},
				{
					"name": "surrogateKey"
				},
				{
					"name": "StgMaxLocSK"
				}
			],
			"scriptLines": [
				"parameters{",
				"     job_id as string ('10')",
				"}",
				"source(output(",
				"          ARREST_KEY as string,",
				"          ARREST_DATE as string,",
				"          PD_CD as string,",
				"          PD_DESC as string,",
				"          OFNS_DESC as string,",
				"          LAW_CODE as string,",
				"          LAW_CAT_CD as string,",
				"          ARREST_BORO as string,",
				"          ARREST_PRECINCT as string,",
				"          JURISDICTION_CODE as string,",
				"          JURISDICTION_DESC as string,",
				"          AGE_GROUP as string,",
				"          PERP_SEX as string,",
				"          PERP_RACE as string,",
				"          X_COORD_CD as string,",
				"          Y_COORD_CD as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source",
				"source(output(",
				"          MXLOCATIONSK as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'Select NVL(max(LOCATION_SK),0) as mxLOCATIONSK from NYPD_DB.NYPD_SCHEMA.DIM_LOCATION\\n',",
				"     format: 'query') ~> maxLocSK",
				"StgMaxLocSK aggregate(groupBy(LATITUDE,",
				"          MXLOCATIONSK,",
				"          LONGITUDE,",
				"          X_COORD_CD,",
				"          Y_COORD_CD),",
				"     Row_Count = count(ARREST_KEY)) ~> aggregate",
				"surrogateKey derive(di_job_id = $job_id,",
				"          di_load_dt = currentTimestamp(),",
				"          Loc_SK = toInteger(MXLOCATIONSK+Row_Num)) ~> derivedColumns",
				"aggregate keyGenerate(output(Row_Num as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"source, maxLocSK join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> StgMaxLocSK",
				"derivedColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LOCATION_SK as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          X_COORD_CD as string,",
				"          Y_COORD_CD as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LOCATION_SK = Loc_SK,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          X_COORD_CD,",
				"          Y_COORD_CD,",
				"          DI_JOB_ID = di_job_id,",
				"          DI_LOAD_DT = di_load_dt",
				"     )) ~> sink"
			]
		}
	}
}